import { TextToNumberConverter } from "../utils/textToNumber";

export class BathroomPatternExtractor {
  private static readonly specificPatterns = [
    // "en vez de X ba침os dame Y"
    /(?:en vez de|en lugar de)\s*(\d+|un|uno|una|dos|tres|cuatro|cinco|seis|siete|ocho|nueve|diez)\s*(ba침os?)\s*(?:dame|quiero|prefiero|mejor|que sean?)\s*(\d+|un|uno|una|dos|tres|cuatro|cinco|seis|siete|ocho|nueve|diez)/i,
    
    // "en vez de X dame Y ba침os"
    /(?:en vez de|en lugar de)\s*(\d+|un|uno|una|dos|tres|cuatro|cinco|seis|siete|ocho|nueve|diez)\s*(?:dame|quiero|prefiero|mejor)\s*(\d+|un|uno|una|dos|tres|cuatro|cinco|seis|siete|ocho|nueve|diez)\s*(ba침os?)/i,
    
    // Patrones directos con modificadores
    /(?:dame|ahora|prefiero|mejor|quiero)\s*(\d+|un|uno|una|dos|tres|cuatro|cinco|seis|siete|ocho|nueve|diez)\s*(ba침os?)/i,
    
    // Cambiar a X ba침os
    /(?:cambiar?(?:\s+a)?)\s*(\d+|un|uno|una|dos|tres|cuatro|cinco|seis|siete|ocho|nueve|diez)\s*(ba침os?)/i,
  ];

  private static readonly originalPatterns = [
    /(?:^|\s)(un|uno|una|dos|tres|cuatro|cinco|seis|siete|ocho|nueve|diez|\d+)\s*(ba침os?|ba침o)/,
    /(solo|칰nicamente|nada m치s que|solamente)\s*(un|uno|una|dos|tres|cuatro|cinco|\d+)\s*(ba침o|ba침os?)/,
    /mejor.*?(que\s+tenga|con)\s*(un|uno|una|dos|tres|cuatro|cinco|\d+)\s*(ba침os?|ba침o)/
  ];

  static extract(text: string): number | null {
    const lowerText = text.toLowerCase();

    // Intentar con patrones espec칤ficos primero
    for (const pattern of this.specificPatterns) {
      const match = lowerText.match(pattern);
      if (match) {
        console.log('游띄 Match ba침os espec칤fico:', match);
        
        if (match[3]) {
          return TextToNumberConverter.convert(match[3]);
        } else if (match[2] && match[2].includes('ba침o')) {
          return TextToNumberConverter.convert(match[1]);
        }
      }
    }

    // Si no se encuentra con patrones espec칤ficos, usar originales
    for (const pattern of this.originalPatterns) {
      const match = lowerText.match(pattern);
      if (match) {
        const numIndex = match[1] === 'mejor' ? 2 : 1;
        return TextToNumberConverter.convert(match[numIndex]);
      }
    }

    return null;
  }
}